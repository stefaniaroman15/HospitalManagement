// <auto-generated />
using HospitalManagement.Database.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HospitalManagement.Database.Migrations
{
    [DbContext(typeof(HospitalDbContext))] // Modificați aici pentru a reflecta numele noului context
    partial class HospitalDatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LibraryManagement.Database.Entities.Patient", b => // Adăugați configurarea pentru entitatea Patient
            {
                b.Property<int>("PatientId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PatientId"));

                b.Property<string>("Name")
                    .HasColumnType("nvarchar(100)");

                b.Property<int>("Age")
                    .HasColumnType("int");

                b.Property<string>("Gender")
                    .HasColumnType("nvarchar(10)");

                b.Property<DateTime>("AdmissionDate")
                    .HasColumnType("datetime2");

                b.Property<DateTime>("DischargeDate")
                    .HasColumnType("datetime2");

                b.HasKey("PatientId");

                b.ToTable("Patients");
            });

            modelBuilder.Entity("LibraryManagement.Database.Entities.MedicalHistory", b => // Adăugați configurarea pentru entitatea MedicalHistory
            {
                b.Property<int>("HistoryId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HistoryId"));

                b.Property<string>("Diagnosis")
                    .HasColumnType("nvarchar(255)");

                b.Property<string>("Treatment")
                    .HasColumnType("nvarchar(255)");

                b.Property<string>("Doctor")
                    .HasColumnType("nvarchar(100)");

                b.Property<int>("PatientId")
                    .HasColumnType("int");

                b.HasKey("HistoryId");

                b.HasIndex("PatientId");

                b.ToTable("MedicalHistory");
            });

            modelBuilder.Entity("LibraryManagement.Database.Entities.MedicalHistory", b =>
            {
                b.HasOne("LibraryManagement.Database.Entities.Patient", "Patient")
                    .WithMany("MedicalHistories")
                    .HasForeignKey("PatientId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Patient");
            });

            modelBuilder.Entity("LibraryManagement.Database.Entities.Patient", b =>
            {
                b.Navigation("MedicalHistories");
            });
#pragma warning restore 612, 618
        }
    }
}
